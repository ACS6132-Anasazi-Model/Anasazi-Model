dopertick{
	calculateYield();                 //calculate harvest of each yield
	getExpectedYield();  			 //get expectedyield	

	for each household{     	
		if death() == 1{            	 //check death
			removehousehold(); 
		}
		else if checkmaize() == 0{   		 //check whether each household is satisfied with food
			chooselocation();   			//including calculate field and water distance
			if no location is found{  
			removehousehold();   
			}
		} 
	
		if fission == 1{
			householdID++;				//add a new household
			chooselocation(); 			//choose location for new household			
			calculateYield();                 //including calculate harvest of each yield
			getExpectedYield();  			 //get expectedyield
			if checkmaize() == 0{   		 //check whether each household is satisfied with food
				chooselocation();   			//calculate field and water distance
				if no location is found{  
				removehousehold();   
			}
		}
	}
	getyieldPDSI();            //update PDSI
	getwaterhdyro();			//update hdyro for water level
	getwater();					//update water sources
	Household::nextYear();
	year++;
}

